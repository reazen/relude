// Generated by Melange
'use strict';

var Curry = require("melange.runtime/curry.js");
var Stdlib = require("./stdlib.js");
var Stdlib__Fun = require("./fun.js");
var Caml_external_polyfill = require("melange.runtime/caml_external_polyfill.js");

function with_open(openfun, s, f) {
  var oc = Curry._1(openfun, s);
  return Stdlib__Fun.protect((function (param) {
                Stdlib.close_out_noerr(oc);
              }), (function (param) {
                return Curry._1(f, oc);
              }));
}

function with_open_bin(s, f) {
  return with_open(Stdlib.open_out_bin, s, f);
}

function with_open_text(s, f) {
  return with_open(Stdlib.open_out, s, f);
}

function with_open_gen(flags, perm, s, f) {
  return with_open((function (param) {
                return Stdlib.open_out_gen(flags, perm, param);
              }), s, f);
}

var seek = Stdlib.LargeFile.seek_out;

var pos = Stdlib.LargeFile.pos_out;

var length = Stdlib.LargeFile.out_channel_length;

var stdout = Stdlib.stdout;

var stderr = Stdlib.stderr;

var open_bin = Stdlib.open_out_bin;

var open_text = Stdlib.open_out;

var open_gen = Stdlib.open_out_gen;

var close = Stdlib.close_out;

var close_noerr = Stdlib.close_out_noerr;

var flush = Stdlib.flush;

var flush_all = Stdlib.flush_all;

var output_char = Stdlib.output_char;

var output_byte = Stdlib.output_byte;

var output_string = Stdlib.output_string;

var output_bytes = Stdlib.output_bytes;

var output = Stdlib.output;

var output_substring = Stdlib.output_substring;

var set_binary_mode = Stdlib.set_binary_mode_out;

function set_buffered(prim0, prim1) {
  return Caml_external_polyfill.resolve("caml_ml_set_buffered")(prim0, prim1);
}

function is_buffered(prim) {
  return Caml_external_polyfill.resolve("caml_ml_is_buffered")(prim);
}

exports.stdout = stdout;
exports.stderr = stderr;
exports.open_bin = open_bin;
exports.open_text = open_text;
exports.open_gen = open_gen;
exports.with_open_bin = with_open_bin;
exports.with_open_text = with_open_text;
exports.with_open_gen = with_open_gen;
exports.seek = seek;
exports.pos = pos;
exports.length = length;
exports.close = close;
exports.close_noerr = close_noerr;
exports.flush = flush;
exports.flush_all = flush_all;
exports.output_char = output_char;
exports.output_byte = output_byte;
exports.output_string = output_string;
exports.output_bytes = output_bytes;
exports.output = output;
exports.output_substring = output_substring;
exports.set_binary_mode = set_binary_mode;
exports.set_buffered = set_buffered;
exports.is_buffered = is_buffered;
/* Stdlib__Fun Not a pure module */
