// Generated by Melange
'use strict';

var Curry = require("melange.runtime/curry.js");

function MonoidAnyExtensions(M) {
  var guard = function (condition, ma) {
    if (condition) {
      return ma;
    } else {
      return M.empty;
    }
  };
  var power = function (ma, times) {
    var go = function (count) {
      if (count <= 0) {
        return M.empty;
      }
      if (count === 1) {
        return ma;
      }
      if (count % 2 === 0) {
        var ma$p = go(count / 2 | 0);
        return Curry._2(M.append, ma$p, ma$p);
      }
      var ma$p$1 = go(count / 2 | 0);
      return Curry._2(M.append, Curry._2(M.append, ma$p$1, ma$p$1), ma);
    };
    return go(times);
  };
  return {
          guard: guard,
          power: power
        };
}

exports.MonoidAnyExtensions = MonoidAnyExtensions;
/* No side effect */
