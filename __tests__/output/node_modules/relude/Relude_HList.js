// Generated by Melange
'use strict';


function pure(a) {
  return /* HCons */{
          _0: a,
          _1: /* HNil */0
        };
}

function cons(h, t) {
  return /* HCons */{
          _0: h,
          _1: t
        };
}

function uncons(param) {
  return [
          param._0,
          param._1
        ];
}

function head(param) {
  return param._0;
}

function tail(param) {
  return param._1;
}

function second(param) {
  return param._1._0;
}

function third(param) {
  return param._1._1._0;
}

function fourth(param) {
  return param._1._1._1._0;
}

function fifth(param) {
  return param._1._1._1._1._0;
}

function fromTuple2(param) {
  return /* HCons */{
          _0: param[0],
          _1: /* HCons */{
            _0: param[1],
            _1: /* HNil */0
          }
        };
}

function fromTuple3(param) {
  return /* HCons */{
          _0: param[0],
          _1: /* HCons */{
            _0: param[1],
            _1: /* HCons */{
              _0: param[2],
              _1: /* HNil */0
            }
          }
        };
}

function fromTuple4(param) {
  return /* HCons */{
          _0: param[0],
          _1: /* HCons */{
            _0: param[1],
            _1: /* HCons */{
              _0: param[2],
              _1: /* HCons */{
                _0: param[3],
                _1: /* HNil */0
              }
            }
          }
        };
}

function fromTuple5(param) {
  return /* HCons */{
          _0: param[0],
          _1: /* HCons */{
            _0: param[1],
            _1: /* HCons */{
              _0: param[2],
              _1: /* HCons */{
                _0: param[3],
                _1: /* HCons */{
                  _0: param[4],
                  _1: /* HNil */0
                }
              }
            }
          }
        };
}

function toTuple2(param) {
  return [
          param._0,
          param._1._0
        ];
}

function toTuple3(param) {
  var match = param._1;
  return [
          param._0,
          match._0,
          match._1._0
        ];
}

function toTuple4(param) {
  var match = param._1;
  var match$1 = match._1;
  return [
          param._0,
          match._0,
          match$1._0,
          match$1._1._0
        ];
}

function toTuple5(param) {
  var match = param._1;
  var match$1 = match._1;
  var match$2 = match$1._1;
  return [
          param._0,
          match._0,
          match$1._0,
          match$2._0,
          match$2._1._0
        ];
}

var empty = /* HNil */0;

exports.empty = empty;
exports.pure = pure;
exports.cons = cons;
exports.uncons = uncons;
exports.head = head;
exports.tail = tail;
exports.second = second;
exports.third = third;
exports.fourth = fourth;
exports.fifth = fifth;
exports.fromTuple2 = fromTuple2;
exports.fromTuple3 = fromTuple3;
exports.fromTuple4 = fromTuple4;
exports.fromTuple5 = fromTuple5;
exports.toTuple2 = toTuple2;
exports.toTuple3 = toTuple3;
exports.toTuple4 = toTuple4;
exports.toTuple5 = toTuple5;
/* No side effect */
