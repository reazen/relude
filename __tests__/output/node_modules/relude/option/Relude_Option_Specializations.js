// Generated by Melange
'use strict';

var Curry = require("melange.runtime/curry.js");
var Bastet__Option = require("bastet/./Option.js");
var Relude__Relude_IO = require("../Relude_IO.js");
var Relude__Relude_Int = require("../Relude_Int.js");
var Relude__Relude_Float = require("../Relude_Float.js");
var Relude__Relude_String = require("../Relude_String.js");
var Relude__Relude_Option_Instances = require("./Relude_Option_Instances.js");

function OptionEqExtensions(E) {
  var eq = function (param, param$1) {
    return Relude__Relude_Option_Instances.eqBy(E.eq, param, param$1);
  };
  return {
          eq: eq
        };
}

function OptionOrdExtensions(O) {
  var OptionOrd = Relude__Relude_Option_Instances.Ord(O);
  return {
          OptionOrd: OptionOrd,
          compare: OptionOrd.compare
        };
}

function eq(param, param$1) {
  return Relude__Relude_Option_Instances.eqBy(Relude__Relude_String.Eq.eq, param, param$1);
}

var OptionOrd = Relude__Relude_Option_Instances.Ord(Relude__Relude_String.Ord);

var String_compare = OptionOrd.compare;

var $$String = {
  eq: eq,
  OptionOrd: OptionOrd,
  compare: String_compare
};

function eq$1(param, param$1) {
  return Relude__Relude_Option_Instances.eqBy(Relude__Relude_Int.Eq.eq, param, param$1);
}

var OptionOrd$1 = Relude__Relude_Option_Instances.Ord(Relude__Relude_Int.Ord);

var Int_compare = OptionOrd$1.compare;

var Int = {
  eq: eq$1,
  OptionOrd: OptionOrd$1,
  compare: Int_compare
};

function eq$2(param, param$1) {
  return Relude__Relude_Option_Instances.eqBy(Relude__Relude_Float.Eq.eq, param, param$1);
}

var OptionOrd$2 = Relude__Relude_Option_Instances.Ord(Relude__Relude_Float.Ord);

var Float_compare = OptionOrd$2.compare;

var Float = {
  eq: eq$2,
  OptionOrd: OptionOrd$2,
  compare: Float_compare
};

function traverse(f, opt) {
  var IoE = Relude__Relude_IO.WithError({});
  var TraverseIO = Bastet__Option.Traversable(IoE.Applicative);
  return Curry._2(TraverseIO.traverse, f, opt);
}

function sequence(opt) {
  var IoE = Relude__Relude_IO.WithError({});
  var TraverseIO = Bastet__Option.Traversable(IoE.Applicative);
  return Curry._1(TraverseIO.sequence, opt);
}

var IO = {
  traverse: traverse,
  sequence: sequence
};

exports.OptionEqExtensions = OptionEqExtensions;
exports.OptionOrdExtensions = OptionOrdExtensions;
exports.$$String = $$String;
exports.Int = Int;
exports.Float = Float;
exports.IO = IO;
/* OptionOrd Not a pure module */
