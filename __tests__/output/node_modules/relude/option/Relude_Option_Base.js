// Generated by Melange
'use strict';

var Curry = require("melange.runtime/curry.js");
var Belt_Option = require("melange.belt/./belt_Option.js");
var Caml_option = require("melange.runtime/caml_option.js");
var Relude__Relude_Option_Instances = require("./Relude_Option_Instances.js");

function some(a) {
  return Caml_option.some(a);
}

function isSome(param) {
  return param !== undefined;
}

function isNone(param) {
  return param === undefined;
}

function fold($$default, f, v) {
  if (v !== undefined) {
    return Curry._1(f, Caml_option.valFromOption(v));
  } else {
    return $$default;
  }
}

function foldLazy(getDefault, f, v) {
  if (v !== undefined) {
    return Curry._1(f, Caml_option.valFromOption(v));
  } else {
    return Curry._1(getDefault, undefined);
  }
}

function getOrElse($$default, a) {
  if (a !== undefined) {
    return Caml_option.valFromOption(a);
  } else {
    return $$default;
  }
}

function getOrElseLazy(getDefault, a) {
  if (a !== undefined) {
    return Caml_option.valFromOption(a);
  } else {
    return Curry._1(getDefault, undefined);
  }
}

function orElse(fallback, fa) {
  if (fa !== undefined) {
    return fa;
  } else {
    return fallback;
  }
}

function orElseLazy(fallback, fa) {
  if (fa !== undefined) {
    return fa;
  } else {
    return Curry._1(fallback, undefined);
  }
}

function tap(ifSome, fa) {
  if (fa !== undefined) {
    Curry._1(ifSome, Caml_option.valFromOption(fa));
    return fa;
  } else {
    return fa;
  }
}

function tapNone(ifNone, fa) {
  if (fa !== undefined) {
    return fa;
  } else {
    Curry._1(ifNone, undefined);
    return fa;
  }
}

function bitap(ifNone, ifSome, fa) {
  if (fa !== undefined) {
    Curry._1(ifSome, Caml_option.valFromOption(fa));
    return fa;
  } else {
    Curry._1(ifNone, undefined);
    return ;
  }
}

function filter(fn) {
  return Relude__Relude_Option_Instances.foldLeft((function ($$default, v) {
                if (Curry._1(fn, v)) {
                  return Caml_option.some(v);
                } else {
                  return $$default;
                }
              }), undefined);
}

function filterNot(f) {
  return filter(function (a) {
              return !Curry._1(f, a);
            });
}

var none;

var empty;

var getOrThrow = Belt_Option.getExn;

var tapSome = tap;

var keep = filter;

var reject = filterNot;

exports.some = some;
exports.none = none;
exports.empty = empty;
exports.isSome = isSome;
exports.isNone = isNone;
exports.fold = fold;
exports.foldLazy = foldLazy;
exports.getOrElse = getOrElse;
exports.getOrElseLazy = getOrElseLazy;
exports.getOrThrow = getOrThrow;
exports.orElse = orElse;
exports.orElseLazy = orElseLazy;
exports.tap = tap;
exports.tapSome = tapSome;
exports.tapNone = tapNone;
exports.bitap = bitap;
exports.filter = filter;
exports.keep = keep;
exports.filterNot = filterNot;
exports.reject = reject;
/* Relude__Relude_Option_Instances Not a pure module */
