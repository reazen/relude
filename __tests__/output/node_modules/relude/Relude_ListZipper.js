// Generated by Melange
'use strict';

var Relude__Relude_Sequence = require("./Relude_Sequence.js");
var Relude__Relude_SequenceZipper = require("./Relude_SequenceZipper.js");

var include = Relude__Relude_SequenceZipper.WithSequence(Relude__Relude_Sequence.List);

var make = include.make;

var makeWithLeft = include.makeWithLeft;

var makeWithRight = include.makeWithRight;

var makeWithRightArray = include.makeWithRightArray;

var makeWithRightList = include.makeWithRightList;

var makeWithFocus = include.makeWithFocus;

var fromSequence = include.fromSequence;

var fromArray = include.fromArray;

var fromList = include.fromList;

var fromNonEmptyArray = include.fromNonEmptyArray;

var fromNea = include.fromNea;

var fromNonEmptyList = include.fromNonEmptyList;

var fromNel = include.fromNel;

var map = include.map;

var Functor = include.Functor;

var BsFunctorExtensions = include.BsFunctorExtensions;

var flipMap = include.flipMap;

var $$void = include.$$void;

var voidRight = include.voidRight;

var voidLeft = include.voidLeft;

var flap = include.flap;

var apply = include.apply;

var Apply = include.Apply;

var BsApplyExtensions = include.BsApplyExtensions;

var applyFirst = include.applyFirst;

var applySecond = include.applySecond;

var map2 = include.map2;

var map3 = include.map3;

var map4 = include.map4;

var map5 = include.map5;

var tuple2 = include.tuple2;

var tuple3 = include.tuple3;

var tuple4 = include.tuple4;

var tuple5 = include.tuple5;

var mapTuple2 = include.mapTuple2;

var mapTuple3 = include.mapTuple3;

var mapTuple4 = include.mapTuple4;

var mapTuple5 = include.mapTuple5;

var pure = include.pure;

var Applicative = include.Applicative;

var BsApplicativeExtensions = include.BsApplicativeExtensions;

var liftA1 = include.liftA1;

var when_ = include.when_;

var unless = include.unless;

var foldLeft = include.foldLeft;

var foldRight = include.foldRight;

var Foldable = include.Foldable;

var BsFoldableExtensions = include.BsFoldableExtensions;

var any = include.any;

var all = include.all;

var containsBy = include.containsBy;

var contains = include.contains;

var indexOfBy = include.indexOfBy;

var indexOf = include.indexOf;

var minBy = include.minBy;

var min = include.min;

var maxBy = include.maxBy;

var max = include.max;

var countBy = include.countBy;

var length = include.length;

var size = include.size;

var count = include.count;

var forEach = include.forEach;

var forEachWithIndex = include.forEachWithIndex;

var find = include.find;

var findWithIndex = include.findWithIndex;

var FoldableSemigroupExtensions = include.FoldableSemigroupExtensions;

var FoldableMonoidExtensions = include.FoldableMonoidExtensions;

var foldMap = include.foldMap;

var foldWithMonoid = include.foldWithMonoid;

var intercalate = include.intercalate;

var FoldableApplicativeExtensions = include.FoldableApplicativeExtensions;

var FoldableMonadExtensions = include.FoldableMonadExtensions;

var FoldableEqExtensions = include.FoldableEqExtensions;

var FoldableOrdExtensions = include.FoldableOrdExtensions;

var Traversable = include.Traversable;

var toSequence = include.toSequence;

var toArray = include.toArray;

var toList = include.toList;

var toNonEmptyArray = include.toNonEmptyArray;

var toNea = include.toNea;

var toNonEmptyList = include.toNonEmptyList;

var toNel = include.toNel;

var concatWithKeepLeftFocus = include.concatWithKeepLeftFocus;

var concat = include.concat;

var concatWithKeepRightFocus = include.concatWithKeepRightFocus;

var Semigroup_Any = include.Semigroup_Any;

var reverse = include.reverse;

var zipWith = include.zipWith;

var zip = include.zip;

var zipWithIndex = include.zipWithIndex;

var getFocus = include.getFocus;

var setFocusBy = include.setFocusBy;

var setFocus = include.setFocus;

var getLeft = include.getLeft;

var setLeft = include.setLeft;

var getLeftInOrder = include.getLeftInOrder;

var setLeftFromInOrder = include.setLeftFromInOrder;

var getRight = include.getRight;

var setRight = include.setRight;

var peekLeft = include.peekLeft;

var peekRight = include.peekRight;

var isAtStart = include.isAtStart;

var isAtEnd = include.isAtEnd;

var isAtIndex = include.isAtIndex;

var isAtItemBy = include.isAtItemBy;

var isAtItem = include.isAtItem;

var moveLeft = include.moveLeft;

var moveRight = include.moveRight;

var moveLeftWithClamp = include.moveLeftWithClamp;

var moveRightWithClamp = include.moveRightWithClamp;

var moveStart = include.moveStart;

var moveEnd = include.moveEnd;

var moveLeftWithWrap = include.moveLeftWithWrap;

var moveRightWithWrap = include.moveRightWithWrap;

var moveLeftTimes = include.moveLeftTimes;

var moveRightTimes = include.moveRightTimes;

var moveLeftTimesWithClamp = include.moveLeftTimesWithClamp;

var moveRightTimesWithClamp = include.moveRightTimesWithClamp;

var moveToIndex = include.moveToIndex;

var moveToIndexWithMod = include.moveToIndexWithMod;

var moveToIndexWithClamp = include.moveToIndexWithClamp;

var findLeftBy = include.findLeftBy;

var findRightBy = include.findRightBy;

var findBy = include.findBy;

var findItemLeftBy = include.findItemLeftBy;

var findItemRightBy = include.findItemRightBy;

var findItemBy = include.findItemBy;

var findItemLeft = include.findItemLeft;

var findItemRight = include.findItemRight;

var findItem = include.findItem;

var insertWithPushLeft = include.insertWithPushLeft;

var insertWithPushRight = include.insertWithPushRight;

var deleteWithPullLeft = include.deleteWithPullLeft;

var deleteWithPullRight = include.deleteWithPullRight;

var deleteWithPullLeftOrRight = include.deleteWithPullLeftOrRight;

var showBy = include.showBy;

var show = include.show;

var Show = include.Show;

var eqBy = include.eqBy;

var eq = include.eq;

var Eq = include.Eq;

var Infix = include.Infix;

exports.make = make;
exports.makeWithLeft = makeWithLeft;
exports.makeWithRight = makeWithRight;
exports.makeWithRightArray = makeWithRightArray;
exports.makeWithRightList = makeWithRightList;
exports.makeWithFocus = makeWithFocus;
exports.fromSequence = fromSequence;
exports.fromArray = fromArray;
exports.fromList = fromList;
exports.fromNonEmptyArray = fromNonEmptyArray;
exports.fromNea = fromNea;
exports.fromNonEmptyList = fromNonEmptyList;
exports.fromNel = fromNel;
exports.map = map;
exports.Functor = Functor;
exports.BsFunctorExtensions = BsFunctorExtensions;
exports.flipMap = flipMap;
exports.$$void = $$void;
exports.voidRight = voidRight;
exports.voidLeft = voidLeft;
exports.flap = flap;
exports.apply = apply;
exports.Apply = Apply;
exports.BsApplyExtensions = BsApplyExtensions;
exports.applyFirst = applyFirst;
exports.applySecond = applySecond;
exports.map2 = map2;
exports.map3 = map3;
exports.map4 = map4;
exports.map5 = map5;
exports.tuple2 = tuple2;
exports.tuple3 = tuple3;
exports.tuple4 = tuple4;
exports.tuple5 = tuple5;
exports.mapTuple2 = mapTuple2;
exports.mapTuple3 = mapTuple3;
exports.mapTuple4 = mapTuple4;
exports.mapTuple5 = mapTuple5;
exports.pure = pure;
exports.Applicative = Applicative;
exports.BsApplicativeExtensions = BsApplicativeExtensions;
exports.liftA1 = liftA1;
exports.when_ = when_;
exports.unless = unless;
exports.foldLeft = foldLeft;
exports.foldRight = foldRight;
exports.Foldable = Foldable;
exports.BsFoldableExtensions = BsFoldableExtensions;
exports.any = any;
exports.all = all;
exports.containsBy = containsBy;
exports.contains = contains;
exports.indexOfBy = indexOfBy;
exports.indexOf = indexOf;
exports.minBy = minBy;
exports.min = min;
exports.maxBy = maxBy;
exports.max = max;
exports.countBy = countBy;
exports.length = length;
exports.size = size;
exports.count = count;
exports.forEach = forEach;
exports.forEachWithIndex = forEachWithIndex;
exports.find = find;
exports.findWithIndex = findWithIndex;
exports.FoldableSemigroupExtensions = FoldableSemigroupExtensions;
exports.FoldableMonoidExtensions = FoldableMonoidExtensions;
exports.foldMap = foldMap;
exports.foldWithMonoid = foldWithMonoid;
exports.intercalate = intercalate;
exports.FoldableApplicativeExtensions = FoldableApplicativeExtensions;
exports.FoldableMonadExtensions = FoldableMonadExtensions;
exports.FoldableEqExtensions = FoldableEqExtensions;
exports.FoldableOrdExtensions = FoldableOrdExtensions;
exports.Traversable = Traversable;
exports.toSequence = toSequence;
exports.toArray = toArray;
exports.toList = toList;
exports.toNonEmptyArray = toNonEmptyArray;
exports.toNea = toNea;
exports.toNonEmptyList = toNonEmptyList;
exports.toNel = toNel;
exports.concatWithKeepLeftFocus = concatWithKeepLeftFocus;
exports.concat = concat;
exports.concatWithKeepRightFocus = concatWithKeepRightFocus;
exports.Semigroup_Any = Semigroup_Any;
exports.reverse = reverse;
exports.zipWith = zipWith;
exports.zip = zip;
exports.zipWithIndex = zipWithIndex;
exports.getFocus = getFocus;
exports.setFocusBy = setFocusBy;
exports.setFocus = setFocus;
exports.getLeft = getLeft;
exports.setLeft = setLeft;
exports.getLeftInOrder = getLeftInOrder;
exports.setLeftFromInOrder = setLeftFromInOrder;
exports.getRight = getRight;
exports.setRight = setRight;
exports.peekLeft = peekLeft;
exports.peekRight = peekRight;
exports.isAtStart = isAtStart;
exports.isAtEnd = isAtEnd;
exports.isAtIndex = isAtIndex;
exports.isAtItemBy = isAtItemBy;
exports.isAtItem = isAtItem;
exports.moveLeft = moveLeft;
exports.moveRight = moveRight;
exports.moveLeftWithClamp = moveLeftWithClamp;
exports.moveRightWithClamp = moveRightWithClamp;
exports.moveStart = moveStart;
exports.moveEnd = moveEnd;
exports.moveLeftWithWrap = moveLeftWithWrap;
exports.moveRightWithWrap = moveRightWithWrap;
exports.moveLeftTimes = moveLeftTimes;
exports.moveRightTimes = moveRightTimes;
exports.moveLeftTimesWithClamp = moveLeftTimesWithClamp;
exports.moveRightTimesWithClamp = moveRightTimesWithClamp;
exports.moveToIndex = moveToIndex;
exports.moveToIndexWithMod = moveToIndexWithMod;
exports.moveToIndexWithClamp = moveToIndexWithClamp;
exports.findLeftBy = findLeftBy;
exports.findRightBy = findRightBy;
exports.findBy = findBy;
exports.findItemLeftBy = findItemLeftBy;
exports.findItemRightBy = findItemRightBy;
exports.findItemBy = findItemBy;
exports.findItemLeft = findItemLeft;
exports.findItemRight = findItemRight;
exports.findItem = findItem;
exports.insertWithPushLeft = insertWithPushLeft;
exports.insertWithPushRight = insertWithPushRight;
exports.deleteWithPullLeft = deleteWithPullLeft;
exports.deleteWithPullRight = deleteWithPullRight;
exports.deleteWithPullLeftOrRight = deleteWithPullLeftOrRight;
exports.showBy = showBy;
exports.show = show;
exports.Show = Show;
exports.eqBy = eqBy;
exports.eq = eq;
exports.Eq = Eq;
exports.Infix = Infix;
/* include Not a pure module */
