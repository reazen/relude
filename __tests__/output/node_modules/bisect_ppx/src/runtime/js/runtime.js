// Generated by Melange
'use strict';

var Fs = require("fs");
var Bisect__Bisect_common = require("./bisect_common.js");

function write_coverage_data(param) {
  var data = Bisect__Bisect_common.runtime_data_to_string(undefined);
  if (data === undefined) {
    return ;
  }
  var _attempts = 100;
  while(true) {
    var attempts = _attempts;
    var filename = Bisect__Bisect_common.random_filename("bisect");
    var val;
    try {
      Fs.openSync(filename, "wx");
      val = undefined;
    }
    catch (exn){
      if (attempts === 0) {
        throw exn;
      }
      _attempts = attempts - 1 | 0;
      continue ;
    }
    Fs.writeFileSync(filename, data, "binary");
    return ;
  };
}

var node_at_exit = (function (callback) {
    if (typeof process !== 'undefined' && typeof process.on !== 'undefined')
      process.on("exit", callback);
  });

var exit_hook_added = {
  contents: false
};

function write_coverage_data_on_exit(param) {
  if (!exit_hook_added.contents) {
    node_at_exit(function (param) {
          write_coverage_data(undefined);
          Bisect__Bisect_common.reset_counters(undefined);
        });
    exit_hook_added.contents = true;
    return ;
  }
  
}

function register_file(param, param$1, param$2, filename, points) {
  write_coverage_data_on_exit(undefined);
  return Bisect__Bisect_common.register_file(filename, points);
}

var get_coverage_data = Bisect__Bisect_common.runtime_data_to_string;

var reset_coverage_data = Bisect__Bisect_common.reset_counters;

exports.register_file = register_file;
exports.get_coverage_data = get_coverage_data;
exports.write_coverage_data = write_coverage_data;
exports.write_coverage_data_on_exit = write_coverage_data_on_exit;
exports.reset_coverage_data = reset_coverage_data;
/* fs Not a pure module */
