// Generated by Melange
'use strict';

var Jest = require("../node_modules/@glennsl/bs-jest/src/jest.js");
var Caml_option = require("melange.runtime/caml_option.js");
var Relude__Relude_Unit = require("relude/./Relude_Unit.js");

Jest.describe("Unit", (function (param) {
        Jest.test("show", (function (param) {
                return Jest.Expect.toEqual("()", Jest.Expect.expect(Relude__Relude_Unit.show(undefined)));
              }));
        Jest.test("eq", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Relude__Relude_Unit.eq(undefined, undefined)));
              }));
        Jest.test("compare", (function (param) {
                return Jest.Expect.toEqual("equal_to", Jest.Expect.expect(Relude__Relude_Unit.compare(undefined, undefined)));
              }));
      }));

Jest.describe("Unit Bounded", (function (param) {
        Jest.test("top", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Relude__Relude_Unit.Bounded.top));
              }));
        Jest.test("bottom", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Relude__Relude_Unit.Bounded.bottom));
              }));
      }));

Jest.describe("Unit Enum", (function (param) {
        Jest.test("pred", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Relude__Relude_Unit.Enum.pred(undefined)));
              }));
        Jest.test("succ", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Relude__Relude_Unit.Enum.succ(undefined)));
              }));
      }));

Jest.describe("Unit BoundedEnum", (function (param) {
        Jest.test("cardinality", (function (param) {
                return Jest.Expect.toEqual(1, Jest.Expect.expect(Relude__Relude_Unit.BoundedEnum.cardinality));
              }));
        Jest.test("fromEnum", (function (param) {
                return Jest.Expect.toEqual(0, Jest.Expect.expect(Relude__Relude_Unit.BoundedEnum.fromEnum(undefined)));
              }));
        Jest.testAll("toEnum", {
              hd: [
                0,
                Caml_option.some(undefined)
              ],
              tl: {
                hd: [
                  -1,
                  undefined
                ],
                tl: {
                  hd: [
                    1,
                    undefined
                  ],
                  tl: /* [] */0
                }
              }
            }, (function (param) {
                return Jest.Expect.toEqual(param[1], Jest.Expect.expect(Relude__Relude_Unit.BoundedEnum.toEnum(param[0])));
              }));
      }));

/*  Not a pure module */
