// Generated by Melange
'use strict';

var Jest = require("../../node_modules/@glennsl/bs-jest/src/jest.js");
var Curry = require("melange.runtime/curry.js");
var Relude__Relude_IO = require("relude/./Relude_IO.js");
var Relude__Relude_Js_Exn = require("relude/js/Relude_Js_Exn.js");
var Relude__Relude_Js_Promise = require("relude/js/Relude_Js_Promise.js");

Jest.describe("Js.Promise", (function (param) {
        Jest.testAsync("toIO success", undefined, (function (onDone) {
                Relude__Relude_IO.unsafeRunAsync((function (value) {
                        if (value.TAG === /* Ok */0) {
                          return Curry._1(onDone, Jest.Expect.toEqual(42, Jest.Expect.expect(value._0)));
                        } else {
                          return Curry._1(onDone, Jest.fail("failed"));
                        }
                      }), Relude__Relude_Js_Promise.toIO(Promise.resolve(42)));
              }));
        Jest.testAsync("toIO error", undefined, (function (onDone) {
                Relude__Relude_IO.unsafeRunAsync((function (e) {
                        if (e.TAG === /* Ok */0) {
                          return Curry._1(onDone, Jest.fail("failed"));
                        } else {
                          return Curry._1(onDone, Jest.Expect.toEqual("my error toIO", Jest.Expect.expect(e._0)));
                        }
                      }), Relude__Relude_Js_Promise.toIO(Promise.reject("my error toIO")));
              }));
        Jest.testAsync("toIOLazy success", undefined, (function (onDone) {
                Relude__Relude_IO.unsafeRunAsync((function (value) {
                        if (value.TAG === /* Ok */0) {
                          return Curry._1(onDone, Jest.Expect.toEqual(42, Jest.Expect.expect(value._0)));
                        } else {
                          return Curry._1(onDone, Jest.fail("failed"));
                        }
                      }), Relude__Relude_Js_Promise.toIOLazy(function (param) {
                          return Promise.resolve(42);
                        }));
              }));
        Jest.testAsync("toIOLazy error", undefined, (function (onDone) {
                Relude__Relude_IO.unsafeRunAsync((function (e) {
                        if (e.TAG === /* Ok */0) {
                          return Curry._1(onDone, Jest.fail("failed"));
                        } else {
                          return Curry._1(onDone, Jest.Expect.toEqual("my error toIOLazy", Jest.Expect.expect(e._0)));
                        }
                      }), Relude__Relude_Js_Promise.toIOLazy(function (param) {
                          return Promise.reject("my error toIOLazy");
                        }));
              }));
        Jest.testPromise("fromIOWithResult success", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIOWithResult(Relude__Relude_IO.pure(42)).then(function (actual) {
                            return Promise.resolve(Jest.Expect.toEqual({
                                            TAG: /* Ok */0,
                                            _0: 42
                                          }, Jest.Expect.expect(actual)));
                          });
              }));
        Jest.testPromise("fromIOWithResult error", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIOWithResult(Relude__Relude_IO.$$throw(42)).then(function (actual) {
                            return Promise.resolve(Jest.Expect.toEqual({
                                            TAG: /* Error */1,
                                            _0: 42
                                          }, Jest.Expect.expect(actual)));
                          });
              }));
        Jest.testPromise("fromIO success", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIO(Relude__Relude_IO.pure(42)).then(function (actual) {
                            return Promise.resolve(Jest.Expect.toEqual(42, Jest.Expect.expect(actual)));
                          });
              }));
        Jest.testPromise("fromIO error", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIO(Relude__Relude_IO.$$throw(42)).then(function (param) {
                              return Promise.resolve(Jest.fail("fail"));
                            }).catch(function (error) {
                            return Promise.resolve(Jest.Expect.toEqual(42, Jest.Expect.expect(error)));
                          });
              }));
        Jest.testPromise("fromIOExn success", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIOExn(Relude__Relude_IO.pure(42)).then(function (actual) {
                            return Promise.resolve(Jest.Expect.toEqual(42, Jest.Expect.expect(actual)));
                          });
              }));
        Jest.testPromise("fromIOExn error", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIOExn(Relude__Relude_IO.suspendThrow(function (param) {
                                    return Relude__Relude_Js_Exn.make("exn");
                                  })).then(function (param) {
                              return Promise.resolve(Jest.fail("fail"));
                            }).catch(function (error) {
                            return Promise.resolve(Jest.Expect.toEqual(Relude__Relude_Js_Exn.make("exn"), Jest.Expect.expect(error)));
                          });
              }));
        Jest.testPromise("fromIOJsExn success", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIOJsExn(Relude__Relude_IO.pure(42)).then(function (actual) {
                            return Promise.resolve(Jest.Expect.toEqual(42, Jest.Expect.expect(actual)));
                          });
              }));
        Jest.testPromise("fromIOJsExn error", undefined, (function (param) {
                return Relude__Relude_Js_Promise.fromIOJsExn(Relude__Relude_IO.suspendThrow(function (param) {
                                    return Relude__Relude_Js_Exn.make("js_exn");
                                  })).then(function (param) {
                              return Promise.resolve(Jest.fail("fail"));
                            }).catch(function (error) {
                            return Promise.resolve(Jest.Expect.toEqual(Relude__Relude_Js_Exn.make("js_exn"), Jest.Expect.expect(error)));
                          });
              }));
      }));

/*  Not a pure module */
