// Generated by Melange
'use strict';

var Jest = require("../node_modules/@glennsl/bs-jest/src/jest.js");
var Relude__Relude_HList = require("relude/./Relude_HList.js");

Jest.describe("HList", (function (param) {
        Jest.test("empty", (function (param) {
                return Jest.Expect.toEqual(/* HNil */0, Jest.Expect.expect(Relude__Relude_HList.empty));
              }));
        Jest.test("pure", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: 1,
                            _1: /* HNil */0
                          }, Jest.Expect.expect(Relude__Relude_HList.pure(1)));
              }));
        Jest.test("cons with empty", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: 1,
                            _1: /* HNil */0
                          }, Jest.Expect.expect(Relude__Relude_HList.cons(1, /* HNil */0)));
              }));
        Jest.test("cons with non-empty", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: 1,
                            _1: /* HCons */{
                              _0: "hi",
                              _1: /* HNil */0
                            }
                          }, Jest.Expect.expect(Relude__Relude_HList.cons(1, /* HCons */{
                                    _0: "hi",
                                    _1: /* HNil */0
                                  })));
              }));
        Jest.test("uncons singleton", (function (param) {
                return Jest.Expect.toEqual([
                            42,
                            Relude__Relude_HList.empty
                          ], Jest.Expect.expect(Relude__Relude_HList.uncons(/* HCons */{
                                    _0: 42,
                                    _1: /* HNil */0
                                  })));
              }));
        Jest.test("uncons non-singleton", (function (param) {
                return Jest.Expect.toEqual([
                            42,
                            /* HCons */{
                              _0: "hi",
                              _1: /* HNil */0
                            }
                          ], Jest.Expect.expect(Relude__Relude_HList.uncons(/* HCons */{
                                    _0: 42,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HNil */0
                                    }
                                  })));
              }));
        Jest.test("head", (function (param) {
                return Jest.Expect.toEqual(1, Jest.Expect.expect(Relude__Relude_HList.head(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HNil */0
                                      }
                                    }
                                  })));
              }));
        Jest.test("tail", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: "hi",
                            _1: /* HCons */{
                              _0: 2.0,
                              _1: /* HNil */0
                            }
                          }, Jest.Expect.expect(Relude__Relude_HList.tail(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HNil */0
                                      }
                                    }
                                  })));
              }));
        Jest.test("second", (function (param) {
                return Jest.Expect.toEqual("hi", Jest.Expect.expect(Relude__Relude_HList.second(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HNil */0
                                      }
                                    }
                                  })));
              }));
        Jest.test("third", (function (param) {
                return Jest.Expect.toEqual(2.0, Jest.Expect.expect(Relude__Relude_HList.third(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HNil */0
                                      }
                                    }
                                  })));
              }));
        Jest.test("third longer list", (function (param) {
                return Jest.Expect.toEqual(2.0, Jest.Expect.expect(Relude__Relude_HList.third(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HCons */{
                                          _0: (function (prim0, prim1) {
                                              return prim0 + prim1 | 0;
                                            }),
                                          _1: /* HNil */0
                                        }
                                      }
                                    }
                                  })));
              }));
        Jest.test("fourth", (function (param) {
                return Jest.Expect.toEqual(42, Jest.Expect.expect(Relude__Relude_HList.fourth(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HCons */{
                                          _0: 42,
                                          _1: /* HNil */0
                                        }
                                      }
                                    }
                                  })));
              }));
        Jest.test("fifth", (function (param) {
                return Jest.Expect.toEqual(42, Jest.Expect.expect(Relude__Relude_HList.fifth(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HCons */{
                                          _0: (function (prim0, prim1) {
                                              return prim0 + prim1 | 0;
                                            }),
                                          _1: /* HCons */{
                                            _0: 42,
                                            _1: /* HNil */0
                                          }
                                        }
                                      }
                                    }
                                  })));
              }));
        Jest.test("fromTuple2", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: 1,
                            _1: /* HCons */{
                              _0: "hi",
                              _1: /* HNil */0
                            }
                          }, Jest.Expect.expect(Relude__Relude_HList.fromTuple2([
                                    1,
                                    "hi"
                                  ])));
              }));
        Jest.test("fromTuple3", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: 1,
                            _1: /* HCons */{
                              _0: "hi",
                              _1: /* HCons */{
                                _0: 2.0,
                                _1: /* HNil */0
                              }
                            }
                          }, Jest.Expect.expect(Relude__Relude_HList.fromTuple3([
                                    1,
                                    "hi",
                                    2.0
                                  ])));
              }));
        Jest.test("fromTuple4", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: 1,
                            _1: /* HCons */{
                              _0: "hi",
                              _1: /* HCons */{
                                _0: 2.0,
                                _1: /* HCons */{
                                  _0: true,
                                  _1: /* HNil */0
                                }
                              }
                            }
                          }, Jest.Expect.expect(Relude__Relude_HList.fromTuple4([
                                    1,
                                    "hi",
                                    2.0,
                                    true
                                  ])));
              }));
        Jest.test("fromTuple5", (function (param) {
                return Jest.Expect.toEqual(/* HCons */{
                            _0: 1,
                            _1: /* HCons */{
                              _0: "hi",
                              _1: /* HCons */{
                                _0: 2.0,
                                _1: /* HCons */{
                                  _0: true,
                                  _1: /* HCons */{
                                    _0: 42,
                                    _1: /* HNil */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Relude__Relude_HList.fromTuple5([
                                    1,
                                    "hi",
                                    2.0,
                                    true,
                                    42
                                  ])));
              }));
        Jest.test("toTuple2", (function (param) {
                return Jest.Expect.toEqual([
                            1,
                            "hi"
                          ], Jest.Expect.expect(Relude__Relude_HList.toTuple2(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HNil */0
                                    }
                                  })));
              }));
        Jest.test("toTuple3", (function (param) {
                return Jest.Expect.toEqual([
                            1,
                            "hi",
                            2.0
                          ], Jest.Expect.expect(Relude__Relude_HList.toTuple3(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HNil */0
                                      }
                                    }
                                  })));
              }));
        Jest.test("toTuple4", (function (param) {
                return Jest.Expect.toEqual([
                            1,
                            "hi",
                            2.0,
                            true
                          ], Jest.Expect.expect(Relude__Relude_HList.toTuple4(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HCons */{
                                          _0: true,
                                          _1: /* HNil */0
                                        }
                                      }
                                    }
                                  })));
              }));
        Jest.test("toTuple4", (function (param) {
                return Jest.Expect.toEqual([
                            1,
                            "hi",
                            2.0,
                            true,
                            42
                          ], Jest.Expect.expect(Relude__Relude_HList.toTuple5(/* HCons */{
                                    _0: 1,
                                    _1: /* HCons */{
                                      _0: "hi",
                                      _1: /* HCons */{
                                        _0: 2.0,
                                        _1: /* HCons */{
                                          _0: true,
                                          _1: /* HCons */{
                                            _0: 42,
                                            _1: /* HNil */0
                                          }
                                        }
                                      }
                                    }
                                  })));
              }));
      }));

/*  Not a pure module */
