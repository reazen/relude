// Generated by Melange
'use strict';

var Jest = require("../node_modules/@glennsl/bs-jest/src/jest.js");
var Curry = require("melange.runtime/curry.js");
var Relude__Relude_IO = require("relude/./Relude_IO.js");
var Relude__Relude_RIO = require("relude/./Relude_RIO.js");
var Relude__Relude_ReaderT = require("relude/./Relude_ReaderT.js");

var testEnv = {
  intValue: 42,
  stringValue: "abc"
};

var Reader = Relude__Relude_ReaderT.Reader.WithEnv({});

var RIO = Relude__Relude_RIO.WithErrorAndEnv({}, {});

var $less$$great = RIO.Infix.$less$$great;

var $less$$$great = RIO.Infix.$less$$$great;

var $great$great$eq = RIO.Infix.$great$great$eq;

Jest.describe("Reader IO", (function (param) {
        Jest.testAsync("test flow", undefined, (function (onDone) {
                Relude__Relude_IO.unsafeRunAsync((function (assertion) {
                        if (assertion.TAG === /* Ok */0) {
                          return Curry._1(onDone, assertion._0);
                        } else {
                          return Curry._1(onDone, Jest.fail("fail"));
                        }
                      }), Relude__Relude_IO.map((function (a) {
                            return Jest.Expect.toEqual("-42abcsemi", Jest.Expect.expect(a));
                          }), Curry._2(RIO.runRIO, testEnv, Curry._2(RIO.semiflatMap, (function (c) {
                                    return Relude__Relude_IO.pure(c + "semi");
                                  }), Curry._2($great$great$eq, RIO.ask, (function (env) {
                                        return Curry._2($less$$$great, Curry._2($less$$$great, Curry._1(RIO.pure, Math.imul(-1, env.intValue)), (function (prim) {
                                                          return String(prim);
                                                        })), (function (a) {
                                                      return a + env.stringValue;
                                                    }));
                                      }))))));
              }));
      }));

exports.testEnv = testEnv;
exports.Reader = Reader;
exports.RIO = RIO;
exports.$less$$great = $less$$great;
exports.$less$$$great = $less$$$great;
exports.$great$great$eq = $great$great$eq;
/* Reader Not a pure module */
