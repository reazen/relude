// Generated by Melange
'use strict';

var Fs = require("fs");
var Curry = require("melange.runtime/curry.js");
var Js_option = require("melange.belt/./js_option.js");
var Caml_option = require("melange.runtime/caml_option.js");
var Relude__Relude_IO = require("relude/./Relude_IO.js");
var Relude__Relude_Option = require("relude/./Relude_Option.js");

var dirname = typeof __dirname === "undefined" ? undefined : __dirname;

var dirname$1 = dirname === undefined ? undefined : Caml_option.some(dirname);

var dirnameOrDot = Js_option.getWithDefault(".", dirname$1);

var Native = {
  dirname: dirname$1,
  dirnameOrDot: dirnameOrDot
};

function readFileSync(path) {
  return Relude__Relude_IO.triesJS(function (param) {
              return Fs.readFileSync(path, "utf8");
            });
}

function writeFileSync(path, content) {
  return Relude__Relude_IO.triesJS(function (param) {
              Fs.writeFileSync(path, content, "utf8");
            });
}

function readFile(path) {
  return Relude__Relude_IO.async(function (onDone) {
              Fs.readFile(path, "utf8", (function (err, content) {
                      if (err !== null) {
                        console.error("Read failed: " + Relude__Relude_Option.getOrElseLazy((function (param) {
                                    return "No error";
                                  }), err.message));
                        return Curry._1(onDone, {
                                    TAG: /* Error */1,
                                    _0: err
                                  });
                      } else {
                        return Curry._1(onDone, {
                                    TAG: /* Ok */0,
                                    _0: content
                                  });
                      }
                    }));
            });
}

function writeFile(path, content) {
  return Relude__Relude_IO.async(function (onDone) {
              Fs.writeFile(path, content, "utf8", (function (err) {
                      if (err !== null) {
                        console.error("Write failed: " + Relude__Relude_Option.getOrElseLazy((function (param) {
                                    return "No error";
                                  }), err.message));
                        return Curry._1(onDone, {
                                    TAG: /* Error */1,
                                    _0: err
                                  });
                      } else {
                        return Curry._1(onDone, {
                                    TAG: /* Ok */0,
                                    _0: undefined
                                  });
                      }
                    }));
            });
}

var IO = {
  readFileSync: readFileSync,
  writeFileSync: writeFileSync,
  readFile: readFile,
  writeFile: writeFile
};

function testFilePath(fileName) {
  return dirnameOrDot + ("/" + fileName);
}

exports.Native = Native;
exports.IO = IO;
exports.testFilePath = testFilePath;
/* dirname Not a pure module */
