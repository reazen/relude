// Generated by Melange
'use strict';

var Jest = require("../../node_modules/@glennsl/bs-jest/src/jest.js");
var Curry = require("melange.runtime/curry.js");
var Relude__Relude_Int = require("relude/./Relude_Int.js");
var Relude__Relude_String = require("relude/./Relude_String.js");
var Relude__Relude_Tuple2 = require("relude/./Relude_Tuple2.js");

function f(user) {
  return user.name;
}

var EqByName = Curry._1(Relude__Relude_String.EqBy, {
      f: f
    });

function f$1(user) {
  return user.age;
}

var EqByAge = Curry._1(Relude__Relude_Int.EqBy, {
      f: f$1
    });

function f$2(user) {
  return [
          user.name,
          user.age
        ];
}

var EqByNameAndAge = Relude__Relude_Tuple2.EqBy(Relude__Relude_String.Eq, Relude__Relude_Int.Eq, {
      f: f$2
    });

var User = {
  EqByName: EqByName,
  EqByAge: EqByAge,
  EqByNameAndAge: EqByNameAndAge
};

var user1 = {
  name: "Andy",
  age: 42
};

var user2 = {
  name: "Andy",
  age: 99
};

var user3 = {
  name: "Bob",
  age: 99
};

Jest.describe("Extensions_Eq", (function (param) {
        Jest.testAll("notEq", {
              hd: [
                1,
                1,
                false
              ],
              tl: {
                hd: [
                  1,
                  2,
                  true
                ],
                tl: /* [] */0
              }
            }, (function (param) {
                return Jest.Expect.toEqual(param[2], Jest.Expect.expect(Curry._2(Relude__Relude_Int.notEq, param[0], param[1])));
              }));
        Jest.testAll("EqByName", {
              hd: [
                user1,
                user1,
                true
              ],
              tl: {
                hd: [
                  user1,
                  user2,
                  true
                ],
                tl: {
                  hd: [
                    user1,
                    user3,
                    false
                  ],
                  tl: {
                    hd: [
                      user2,
                      user1,
                      true
                    ],
                    tl: {
                      hd: [
                        user2,
                        user2,
                        true
                      ],
                      tl: {
                        hd: [
                          user2,
                          user3,
                          false
                        ],
                        tl: {
                          hd: [
                            user3,
                            user1,
                            false
                          ],
                          tl: {
                            hd: [
                              user3,
                              user2,
                              false
                            ],
                            tl: {
                              hd: [
                                user3,
                                user3,
                                true
                              ],
                              tl: /* [] */0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }, (function (param) {
                return Jest.Expect.toEqual(param[2], Jest.Expect.expect(Curry._2(EqByName.eq, param[0], param[1])));
              }));
        Jest.testAll("EqByAge", {
              hd: [
                user1,
                user1,
                true
              ],
              tl: {
                hd: [
                  user1,
                  user2,
                  false
                ],
                tl: {
                  hd: [
                    user1,
                    user3,
                    false
                  ],
                  tl: {
                    hd: [
                      user2,
                      user1,
                      false
                    ],
                    tl: {
                      hd: [
                        user2,
                        user2,
                        true
                      ],
                      tl: {
                        hd: [
                          user2,
                          user3,
                          true
                        ],
                        tl: {
                          hd: [
                            user3,
                            user1,
                            false
                          ],
                          tl: {
                            hd: [
                              user3,
                              user2,
                              true
                            ],
                            tl: {
                              hd: [
                                user3,
                                user3,
                                true
                              ],
                              tl: /* [] */0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }, (function (param) {
                return Jest.Expect.toEqual(param[2], Jest.Expect.expect(Curry._2(EqByAge.eq, param[0], param[1])));
              }));
        Jest.testAll("EqByNameAndAge", {
              hd: [
                user1,
                user1,
                true
              ],
              tl: {
                hd: [
                  user1,
                  user2,
                  false
                ],
                tl: {
                  hd: [
                    user1,
                    user3,
                    false
                  ],
                  tl: {
                    hd: [
                      user2,
                      user1,
                      false
                    ],
                    tl: {
                      hd: [
                        user2,
                        user2,
                        true
                      ],
                      tl: {
                        hd: [
                          user2,
                          user3,
                          false
                        ],
                        tl: {
                          hd: [
                            user3,
                            user1,
                            false
                          ],
                          tl: {
                            hd: [
                              user3,
                              user2,
                              false
                            ],
                            tl: {
                              hd: [
                                user3,
                                user3,
                                true
                              ],
                              tl: /* [] */0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }, (function (param) {
                return Jest.Expect.toEqual(param[2], Jest.Expect.expect(Curry._2(EqByNameAndAge.eq, param[0], param[1])));
              }));
        Jest.testAll("|=| operator", {
              hd: [
                1,
                1,
                true
              ],
              tl: {
                hd: [
                  1,
                  2,
                  false
                ],
                tl: {
                  hd: [
                    2,
                    1,
                    false
                  ],
                  tl: /* [] */0
                }
              }
            }, (function (param) {
                return Jest.Expect.toEqual(param[2], Jest.Expect.expect(Curry._2(Relude__Relude_Int.Infix.$pipe$eq$pipe, param[0], param[1])));
              }));
        Jest.testAll("|!=| operator", {
              hd: [
                1,
                1,
                false
              ],
              tl: {
                hd: [
                  1,
                  2,
                  true
                ],
                tl: {
                  hd: [
                    2,
                    1,
                    true
                  ],
                  tl: /* [] */0
                }
              }
            }, (function (param) {
                return Jest.Expect.toEqual(param[2], Jest.Expect.expect(Curry._2(Relude__Relude_Int.Infix.$pipe$bang$eq$pipe, param[0], param[1])));
              }));
      }));

exports.User = User;
exports.user1 = user1;
exports.user2 = user2;
exports.user3 = user3;
/* EqByName Not a pure module */
