// Generated by Melange
'use strict';

var Jest = require("../node_modules/@glennsl/bs-jest/src/jest.js");
var Curry = require("melange.runtime/curry.js");
var Relude__Relude_Int = require("relude/./Relude_Int.js");
var Relude__Relude_List = require("relude/./Relude_List.js");
var Relude__Relude_String = require("relude/./Relude_String.js");
var Relude__Relude_NonEmpty = require("relude/./Relude_NonEmpty.js");
var Relude__Relude_Sequence = require("relude/./Relude_Sequence.js");
var Relude__Relude_ListZipper = require("relude/./Relude_ListZipper.js");
var Relude__Relude_List_Instances = require("relude/list/Relude_List_Instances.js");
var Relude__Relude_Option_Instances = require("relude/option/Relude_Option_Instances.js");

var LZFoldMap = Curry._1(Relude__Relude_ListZipper.Foldable.Fold_Map, Relude__Relude_String.Monoid);

var LZFoldMapAny = Curry._1(Relude__Relude_ListZipper.Foldable.Fold_Map_Any, Relude__Relude_List_Instances.MonoidAny);

var LZTraversable = Curry._1(Relude__Relude_ListZipper.Traversable, Relude__Relude_Option_Instances.Applicative);

Jest.describe("ListZipper", (function (param) {
        Jest.test("make", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: {
                              hd: 2,
                              tl: {
                                hd: 1,
                                tl: /* [] */0
                              }
                            },
                            _1: 3,
                            _2: {
                              hd: 4,
                              tl: {
                                hd: 5,
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.make, {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }, 3, {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  })));
              }));
        Jest.test("makeWithLeft", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: {
                              hd: 2,
                              tl: {
                                hd: 1,
                                tl: /* [] */0
                              }
                            },
                            _1: 3,
                            _2: /* [] */0
                          }, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.makeWithLeft, {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }, 3)));
              }));
        Jest.test("makeWithRight", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 3,
                            _2: {
                              hd: 4,
                              tl: {
                                hd: 5,
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.makeWithRight, 3, {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  })));
              }));
        Jest.test("makeWithRightArray", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 3,
                            _2: {
                              hd: 4,
                              tl: {
                                hd: 5,
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.makeWithRightArray, 3, [
                                    4,
                                    5
                                  ])));
              }));
        Jest.test("makeWithRightList", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 3,
                            _2: {
                              hd: 4,
                              tl: {
                                hd: 5,
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.makeWithRightList, 3, {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  })));
              }));
        Jest.test("makeWithFocus", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 3,
                            _2: /* [] */0
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.makeWithFocus, 3)));
              }));
        Jest.test("fromSequence list non-empty", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 1,
                            _2: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromSequence, Relude__Relude_Sequence.List.fromList({
                                        hd: 1,
                                        tl: {
                                          hd: 2,
                                          tl: {
                                            hd: 3,
                                            tl: {
                                              hd: 4,
                                              tl: {
                                                hd: 5,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }))));
              }));
        Jest.test("fromSequence list empty", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromSequence, Relude__Relude_Sequence.List.fromList(/* [] */0))));
              }));
        Jest.test("fromSequence array non-empty", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 1,
                            _2: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromSequence, Curry._1(Relude__Relude_Sequence.List.fromArray, [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5
                                      ]))));
              }));
        Jest.test("fromSequence array empty", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromSequence, Curry._1(Relude__Relude_Sequence.List.fromArray, []))));
              }));
        Jest.test("fromArray non-empty", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 1,
                            _2: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromArray, [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5
                                  ])));
              }));
        Jest.test("fromArray empty", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromArray, [])));
              }));
        Jest.test("fromList non-empty", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 1,
                            _2: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromList, {
                                    hd: 1,
                                    tl: {
                                      hd: 2,
                                      tl: {
                                        hd: 3,
                                        tl: {
                                          hd: 4,
                                          tl: {
                                            hd: 5,
                                            tl: /* [] */0
                                          }
                                        }
                                      }
                                    }
                                  })));
              }));
        Jest.test("fromList empty", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromList, /* [] */0)));
              }));
        Jest.test("fromNonEmptyArray", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 1,
                            _2: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromNea, Relude__Relude_NonEmpty.$$Array.make(1, [
                                        2,
                                        3,
                                        4,
                                        5
                                      ]))));
              }));
        Jest.test("fromNonEmptyList", (function (param) {
                return Jest.Expect.toEqual(/* Zipper */{
                            _0: /* [] */0,
                            _1: 1,
                            _2: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.fromNel, Relude__Relude_NonEmpty.List.make(1, {
                                        hd: 2,
                                        tl: {
                                          hd: 3,
                                          tl: {
                                            hd: 4,
                                            tl: {
                                              hd: 5,
                                              tl: /* [] */0
                                            }
                                          }
                                        }
                                      }))));
              }));
        Jest.test("map", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 20,
                                tl: {
                                  hd: 10,
                                  tl: /* [] */0
                                }
                              }, 30, {
                                hd: 40,
                                tl: {
                                  hd: 50,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.Infix.$less$$$great, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }), (function (a) {
                                      return Math.imul(a, 10);
                                    }))));
              }));
        Jest.test("apply", (function (param) {
                var l_0 = function (a) {
                  return Math.imul(a, 10);
                };
                var l_1 = {
                  hd: (function (a) {
                      return Math.imul(a, 100);
                    }),
                  tl: /* [] */0
                };
                var l = {
                  hd: l_0,
                  tl: l_1
                };
                var f = function (a) {
                  return Math.imul(a, 1000);
                };
                var r_0 = function (a) {
                  return Math.imul(a, 10000);
                };
                var r_1 = {
                  hd: (function (a) {
                      return Math.imul(a, 100000);
                    }),
                  tl: /* [] */0
                };
                var r = {
                  hd: r_0,
                  tl: r_1
                };
                var actual = Curry._2(Relude__Relude_ListZipper.Infix.$less$star$great, Curry._3(Relude__Relude_ListZipper.make, l, f, r), Curry._3(Relude__Relude_ListZipper.make, {
                          hd: 2,
                          tl: {
                            hd: 1,
                            tl: /* [] */0
                          }
                        }, 3, {
                          hd: 4,
                          tl: {
                            hd: 5,
                            tl: /* [] */0
                          }
                        }));
                var expected = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 20,
                      tl: {
                        hd: 100,
                        tl: /* [] */0
                      }
                    }, 3000, {
                      hd: 40000,
                      tl: {
                        hd: 500000,
                        tl: /* [] */0
                      }
                    });
                return Jest.Expect.toEqual(expected, Jest.Expect.expect(actual));
              }));
        Jest.test("pure", (function (param) {
                return Jest.Expect.toEqual(Curry._1(Relude__Relude_ListZipper.makeWithFocus, 42), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.pure, 42)));
              }));
        Jest.test("foldLeft", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 1,
                            tl: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.foldLeft, (function (acc, a) {
                                      return Relude__Relude_List.append(a, acc);
                                    }), /* [] */0, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("foldRight", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 5,
                            tl: {
                              hd: 4,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 2,
                                  tl: {
                                    hd: 1,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.foldRight, Relude__Relude_List.append, /* [] */0, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("foldMap", (function (param) {
                return Jest.Expect.toEqual("12345", Jest.Expect.expect(Curry._2(LZFoldMap.fold_map, (function (prim) {
                                      return String(prim);
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("foldMapAny", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 1,
                            tl: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._2(LZFoldMapAny.fold_map, (function (a) {
                                      return {
                                              hd: a,
                                              tl: /* [] */0
                                            };
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("traverse", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: "2",
                                tl: {
                                  hd: "1",
                                  tl: /* [] */0
                                }
                              }, "3", {
                                hd: "4",
                                tl: {
                                  hd: "5",
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(LZTraversable.traverse, (function (a) {
                                      return String(a);
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("sequence", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(LZTraversable.sequence, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("toSequence", (function (param) {
                return Jest.Expect.toEqual(Relude__Relude_Sequence.List.fromList({
                                hd: 1,
                                tl: {
                                  hd: 2,
                                  tl: {
                                    hd: 3,
                                    tl: {
                                      hd: 4,
                                      tl: {
                                        hd: 5,
                                        tl: /* [] */0
                                      }
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.toSequence, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("toArray", (function (param) {
                return Jest.Expect.toEqual([
                            1,
                            2,
                            3,
                            4,
                            5
                          ], Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.toArray, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("toList", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 1,
                            tl: {
                              hd: 2,
                              tl: {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.toList, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("toNonEmptyArray", (function (param) {
                return Jest.Expect.toEqual(Relude__Relude_NonEmpty.$$Array.make(1, [
                                2,
                                3,
                                4,
                                5
                              ]), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.toNea, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("toNonEmptyArray empty left", (function (param) {
                return Jest.Expect.toEqual(Relude__Relude_NonEmpty.$$Array.make(3, [
                                4,
                                5
                              ]), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.toNea, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("toNonEmptyList", (function (param) {
                return Jest.Expect.toEqual(Relude__Relude_NonEmpty.List.make(1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.toNel, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("toNonEmptyList empty left", (function (param) {
                return Jest.Expect.toEqual(Relude__Relude_NonEmpty.List.make(3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.toNel, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("concatWithKeepLeftFocus", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 20,
                      tl: {
                        hd: 10,
                        tl: /* [] */0
                      }
                    }, 30, {
                      hd: 40,
                      tl: {
                        hd: 50,
                        tl: /* [] */0
                      }
                    });
                var z = Curry._2(Relude__Relude_ListZipper.concatWithKeepLeftFocus, x, y);
                return Jest.Expect.toEqual([
                            Curry._3(Relude__Relude_ListZipper.make, {
                                  hd: 2,
                                  tl: {
                                    hd: 1,
                                    tl: /* [] */0
                                  }
                                }, 3, {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: {
                                      hd: 10,
                                      tl: {
                                        hd: 20,
                                        tl: {
                                          hd: 30,
                                          tl: {
                                            hd: 40,
                                            tl: {
                                              hd: 50,
                                              tl: /* [] */0
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }),
                            {
                              hd: 1,
                              tl: {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: {
                                        hd: 10,
                                        tl: {
                                          hd: 20,
                                          tl: {
                                            hd: 30,
                                            tl: {
                                              hd: 40,
                                              tl: {
                                                hd: 50,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ], Jest.Expect.expect([
                                z,
                                Curry._1(Relude__Relude_ListZipper.toList, z)
                              ]));
              }));
        Jest.test("concatWithKeepRightFocus", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 20,
                      tl: {
                        hd: 10,
                        tl: /* [] */0
                      }
                    }, 30, {
                      hd: 40,
                      tl: {
                        hd: 50,
                        tl: /* [] */0
                      }
                    });
                var z = Curry._2(Relude__Relude_ListZipper.concatWithKeepRightFocus, x, y);
                return Jest.Expect.toEqual([
                            Curry._3(Relude__Relude_ListZipper.make, {
                                  hd: 20,
                                  tl: {
                                    hd: 10,
                                    tl: {
                                      hd: 5,
                                      tl: {
                                        hd: 4,
                                        tl: {
                                          hd: 3,
                                          tl: {
                                            hd: 2,
                                            tl: {
                                              hd: 1,
                                              tl: /* [] */0
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }, 30, {
                                  hd: 40,
                                  tl: {
                                    hd: 50,
                                    tl: /* [] */0
                                  }
                                }),
                            {
                              hd: 1,
                              tl: {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: {
                                        hd: 10,
                                        tl: {
                                          hd: 20,
                                          tl: {
                                            hd: 30,
                                            tl: {
                                              hd: 40,
                                              tl: {
                                                hd: 50,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ], Jest.Expect.expect([
                                z,
                                Curry._1(Relude__Relude_ListZipper.toList, z)
                              ]));
              }));
        Jest.test("reverse", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.reverse, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("zipWith", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 20,
                      tl: {
                        hd: 10,
                        tl: /* [] */0
                      }
                    }, 30, {
                      hd: 40,
                      tl: {
                        hd: 50,
                        tl: /* [] */0
                      }
                    });
                var z = Curry._3(Relude__Relude_ListZipper.zipWith, (function (a, b) {
                        return a + b | 0;
                      }), x, y);
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 22,
                                tl: {
                                  hd: 11,
                                  tl: /* [] */0
                                }
                              }, 33, {
                                hd: 44,
                                tl: {
                                  hd: 55,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(z));
              }));
        Jest.test("zip", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 20,
                      tl: {
                        hd: 10,
                        tl: /* [] */0
                      }
                    }, 30, {
                      hd: 40,
                      tl: {
                        hd: 50,
                        tl: /* [] */0
                      }
                    });
                var z = Curry._2(Relude__Relude_ListZipper.zip, x, y);
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: [
                                  2,
                                  20
                                ],
                                tl: {
                                  hd: [
                                    1,
                                    10
                                  ],
                                  tl: /* [] */0
                                }
                              }, [
                                3,
                                30
                              ], {
                                hd: [
                                  4,
                                  40
                                ],
                                tl: {
                                  hd: [
                                    5,
                                    50
                                  ],
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(z));
              }));
        Jest.test("zipWithIndex", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: [
                                  2,
                                  1
                                ],
                                tl: {
                                  hd: [
                                    1,
                                    0
                                  ],
                                  tl: /* [] */0
                                }
                              }, [
                                3,
                                2
                              ], {
                                hd: [
                                  4,
                                  3
                                ],
                                tl: {
                                  hd: [
                                    5,
                                    4
                                  ],
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.zipWithIndex, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("getFocus", (function (param) {
                return Jest.Expect.toEqual(3, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.getFocus, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("setFocusBy", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 30, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.setFocusBy, (function (a) {
                                      return Math.imul(a, 10);
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("setFocus", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 42, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.setFocus, 42, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("getLeft", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 2,
                            tl: {
                              hd: 1,
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.getLeft, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("setLeft", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 42,
                                tl: {
                                  hd: 55,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.setLeft, {
                                    hd: 42,
                                    tl: {
                                      hd: 55,
                                      tl: /* [] */0
                                    }
                                  }, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("getRight", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 4,
                            tl: {
                              hd: 5,
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.getRight, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("setRight", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 42,
                                tl: {
                                  hd: 55,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.setRight, {
                                    hd: 42,
                                    tl: {
                                      hd: 55,
                                      tl: /* [] */0
                                    }
                                  }, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("getLeftInOrder", (function (param) {
                return Jest.Expect.toEqual({
                            hd: 1,
                            tl: {
                              hd: 2,
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.getLeftInOrder, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("setLeftInOrder", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 55,
                                tl: {
                                  hd: 42,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.setLeftFromInOrder, {
                                    hd: 42,
                                    tl: {
                                      hd: 55,
                                      tl: /* [] */0
                                    }
                                  }, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("peekLeft", (function (param) {
                return Jest.Expect.toEqual(2, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.peekLeft, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("peekRight", (function (param) {
                return Jest.Expect.toEqual(4, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.peekRight, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("isAtStart not at start", (function (param) {
                return Jest.Expect.toEqual(false, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.isAtStart, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("isAtStart is at start", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.isAtStart, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("isAtEnd not at end", (function (param) {
                return Jest.Expect.toEqual(false, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.isAtEnd, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("isAtEnd is at end", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.isAtEnd, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("isAtIndex true", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.isAtIndex, 2, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("isAtIndex false", (function (param) {
                return Jest.Expect.toEqual(false, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.isAtIndex, 1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("isAtItemBy", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.isAtItemBy, Relude__Relude_Int.Eq.eq, 3, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("isAtItem", (function (param) {
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.isAtItem, Relude__Relude_Int.Eq, 3, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("moveLeft", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveLeft, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveLeft at start", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveLeft, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRight", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 3,
                                tl: {
                                  hd: 2,
                                  tl: {
                                    hd: 1,
                                    tl: /* [] */0
                                  }
                                }
                              }, 4, {
                                hd: 5,
                                tl: /* [] */0
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveRight, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRight at end", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveRight, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("moveLeftWithClamp", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveLeftWithClamp, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveLeftWithClamp at start", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveLeftWithClamp, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRightWithClamp", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 3,
                                tl: {
                                  hd: 2,
                                  tl: {
                                    hd: 1,
                                    tl: /* [] */0
                                  }
                                }
                              }, 4, {
                                hd: 5,
                                tl: /* [] */0
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveRightWithClamp, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRightWithClamp at end", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, /* [] */0), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveRightWithClamp, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("moveStart", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveStart, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveStart at start", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveStart, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveEnd", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveEnd, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveEnd at end", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, /* [] */0), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveEnd, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("moveLeftWithWrap", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveLeftWithWrap, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveLeftWithWrap at start", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: /* [] */0
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveLeftWithWrap, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRightWithWrap", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 3,
                                tl: {
                                  hd: 2,
                                  tl: {
                                    hd: 1,
                                    tl: /* [] */0
                                  }
                                }
                              }, 4, {
                                hd: 5,
                                tl: /* [] */0
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveRightWithWrap, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRightWithWrap at end", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.moveRightWithWrap, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, /* [] */0))));
              }));
        Jest.test("moveLeftTimes", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: {
                                    hd: 6,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveLeftTimes, 3, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 5,
                                        tl: {
                                          hd: 4,
                                          tl: {
                                            hd: 3,
                                            tl: {
                                              hd: 2,
                                              tl: {
                                                hd: 1,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }, 6, /* [] */0))));
              }));
        Jest.test("moveLeftTimes to start", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: {
                                        hd: 6,
                                        tl: /* [] */0
                                      }
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveLeftTimes, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 5,
                                        tl: {
                                          hd: 4,
                                          tl: {
                                            hd: 3,
                                            tl: {
                                              hd: 2,
                                              tl: {
                                                hd: 1,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }, 6, /* [] */0))));
              }));
        Jest.test("moveLeftTimes past start", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveLeftTimes, 6, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 5,
                                        tl: {
                                          hd: 4,
                                          tl: {
                                            hd: 3,
                                            tl: {
                                              hd: 2,
                                              tl: {
                                                hd: 1,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }, 6, /* [] */0))));
              }));
        Jest.test("moveLeftTimes invalid times", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveLeftTimes, -1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRightTimes", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 3,
                                tl: {
                                  hd: 2,
                                  tl: {
                                    hd: 1,
                                    tl: /* [] */0
                                  }
                                }
                              }, 4, {
                                hd: 5,
                                tl: {
                                  hd: 6,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveRightTimes, 3, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                        hd: 2,
                                        tl: {
                                          hd: 3,
                                          tl: {
                                            hd: 4,
                                            tl: {
                                              hd: 5,
                                              tl: {
                                                hd: 6,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }))));
              }));
        Jest.test("moveRightTimes to end", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 5,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 3,
                                    tl: {
                                      hd: 2,
                                      tl: {
                                        hd: 1,
                                        tl: /* [] */0
                                      }
                                    }
                                  }
                                }
                              }, 6, /* [] */0), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveRightTimes, 5, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                        hd: 2,
                                        tl: {
                                          hd: 3,
                                          tl: {
                                            hd: 4,
                                            tl: {
                                              hd: 5,
                                              tl: {
                                                hd: 6,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }))));
              }));
        Jest.test("moveRightTimes past end", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveRightTimes, 6, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                        hd: 2,
                                        tl: {
                                          hd: 3,
                                          tl: {
                                            hd: 4,
                                            tl: {
                                              hd: 5,
                                              tl: {
                                                hd: 6,
                                                tl: /* [] */0
                                              }
                                            }
                                          }
                                        }
                                      }))));
              }));
        Jest.test("moveRightTimes invalid times", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveRightTimes, -1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveLeftTimesWithClamp", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveLeftTimesWithClamp, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveRightTimesWithClamp", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveRightTimesWithClamp, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndex no-op", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndex, 2, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndex right", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndex, 4, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndex left", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndex, 1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndex invalid", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndex, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithMod no-op", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithMod, 2, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithMod right", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithMod, 4, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithMod left", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithMod, 1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithMod invalid", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithMod, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithClamp no-op", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithClamp, 2, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithClamp right", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithClamp, 4, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithClamp left", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithClamp, 1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("moveToIndexWithClamp invalid", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.moveToIndexWithClamp, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findLeftBy", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.findLeftBy, undefined, (function (a) {
                                      return a === 1;
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findLeftBy focus", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.findLeftBy, undefined, (function (a) {
                                      return a === 3;
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findLeftBy no focus", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.findLeftBy, false, (function (a) {
                                      return a === 3;
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findRightBy", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.findRightBy, undefined, (function (a) {
                                      return a === 5;
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findRightBy focus", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 3, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.findRightBy, undefined, (function (a) {
                                      return a === 3;
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findRightBy no focus", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.findRightBy, false, (function (a) {
                                      return a === 3;
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findBy", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.findBy, undefined, (function (a) {
                                      return a === 5;
                                    }), Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findItemLeftBy", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._4(Relude__Relude_ListZipper.findItemLeftBy, undefined, Relude__Relude_Int.Eq.eq, 1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findItemRightBy", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._4(Relude__Relude_ListZipper.findItemRightBy, undefined, Relude__Relude_Int.Eq.eq, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findItemBy", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._4(Relude__Relude_ListZipper.findItemBy, undefined, Relude__Relude_Int.Eq.eq, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findItemLeft", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 1, {
                                hd: 2,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 4,
                                    tl: {
                                      hd: 5,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }), Jest.Expect.expect(Curry._4(Relude__Relude_ListZipper.findItemLeft, Relude__Relude_Int.Eq, undefined, 1, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findItemRight", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._4(Relude__Relude_ListZipper.findItemRight, Relude__Relude_Int.Eq, undefined, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("findItem", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 4,
                                tl: {
                                  hd: 3,
                                  tl: {
                                    hd: 2,
                                    tl: {
                                      hd: 1,
                                      tl: /* [] */0
                                    }
                                  }
                                }
                              }, 5, /* [] */0), Jest.Expect.expect(Curry._4(Relude__Relude_ListZipper.findItem, Relude__Relude_Int.Eq, undefined, 5, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("insertWithPushLeft", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 3,
                                tl: {
                                  hd: 2,
                                  tl: {
                                    hd: 1,
                                    tl: /* [] */0
                                  }
                                }
                              }, 42, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.insertWithPushLeft, 42, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("insertWithPushRight", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 42, {
                                hd: 3,
                                tl: {
                                  hd: 4,
                                  tl: {
                                    hd: 5,
                                    tl: /* [] */0
                                  }
                                }
                              }), Jest.Expect.expect(Curry._2(Relude__Relude_ListZipper.insertWithPushRight, 42, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("deleteWithPullLeft", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.deleteWithPullLeft, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("deleteWithPullRight", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 2,
                                tl: {
                                  hd: 1,
                                  tl: /* [] */0
                                }
                              }, 4, {
                                hd: 5,
                                tl: /* [] */0
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.deleteWithPullRight, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("deleteWithPullLeftOrRight left", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, {
                                hd: 1,
                                tl: /* [] */0
                              }, 2, {
                                hd: 4,
                                tl: {
                                  hd: 5,
                                  tl: /* [] */0
                                }
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.deleteWithPullLeftOrRight, Curry._3(Relude__Relude_ListZipper.make, {
                                        hd: 2,
                                        tl: {
                                          hd: 1,
                                          tl: /* [] */0
                                        }
                                      }, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("deleteWithPullLeftOrRight right", (function (param) {
                return Jest.Expect.toEqual(Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 4, {
                                hd: 5,
                                tl: /* [] */0
                              }), Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.deleteWithPullLeftOrRight, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, {
                                        hd: 4,
                                        tl: {
                                          hd: 5,
                                          tl: /* [] */0
                                        }
                                      }))));
              }));
        Jest.test("deleteWithPullLeftOrRight none", (function (param) {
                return Jest.Expect.toEqual(undefined, Jest.Expect.expect(Curry._1(Relude__Relude_ListZipper.deleteWithPullLeftOrRight, Curry._3(Relude__Relude_ListZipper.make, /* [] */0, 3, /* [] */0))));
              }));
        Jest.test("showBy", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._2(Relude__Relude_ListZipper.showBy, (function (prim) {
                        return String(prim);
                      }), x);
                return Jest.Expect.toEqual("Zipper([2, 1], 3, [4, 5])", Jest.Expect.expect(y));
              }));
        Jest.test("show", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._2(Relude__Relude_ListZipper.show, Relude__Relude_Int.Show, x);
                return Jest.Expect.toEqual("Zipper([2, 1], 3, [4, 5])", Jest.Expect.expect(y));
              }));
        Jest.test("eqBy true", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                return Jest.Expect.toEqual(true, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.eqBy, Relude__Relude_Int.eq, x, y)));
              }));
        Jest.test("eqBy false", (function (param) {
                var x = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 4,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                var y = Curry._3(Relude__Relude_ListZipper.make, {
                      hd: 2,
                      tl: {
                        hd: 1,
                        tl: /* [] */0
                      }
                    }, 3, {
                      hd: 44,
                      tl: {
                        hd: 5,
                        tl: /* [] */0
                      }
                    });
                return Jest.Expect.toEqual(false, Jest.Expect.expect(Curry._3(Relude__Relude_ListZipper.eqBy, Relude__Relude_Int.eq, x, y)));
              }));
      }));

exports.LZFoldMap = LZFoldMap;
exports.LZFoldMapAny = LZFoldMapAny;
exports.LZTraversable = LZTraversable;
/* LZFoldMap Not a pure module */
